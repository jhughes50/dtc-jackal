<launch>

    <arg name="launch_prefix" default="" />
    <arg name="yolo" default="false" />
    <arg name="alt_threshold" default="15"/>

    <param name="yolo" type="bool" value="$(arg yolo)"/>
	<param name="alt_threshold" type="double" value="$(arg alt_threshold)"/>
 
    <!-- YOLO Node -->
    <group if="$(arg yolo)">
    <node pkg="yolov7_ros" type="detect_ros.py" name="detect" output="screen"
        ns="yolov7">
            <!-- Download the official weights from the original repo -->
            <param name="weights_path" type="str"
            value="$(find tdd2)/models/yolov7-tiny.pt"/>
            <!-- Path to a class_labels.txt file containing your desired class labels. The i-th entry corresponds to the i-th class id. For example, in coco class label 0 corresponds to 'person'. Files for the coco and berkeley deep drive datasets are provided in the 'class_labels/' directory. If you leave it empty then no class labels are visualized.-->
            <param name="classes_path" type="str" value="$(find tdd2)/models/labels.txt" />
            <!-- topic name to subscribe to -->
            <param name="img_topic" type="str" value="/camera/image_color_throttle" />
            <!-- topic name for the detection output -->
            <param name="out_topic" type="str" value="yolov7" />
            <!-- confidence threshold -->
            <param name="conf_thresh" type="double" value="0.35" />
            <!-- intersection over union threshold -->
            <param name="iou_thresh" type="double" value="0.45" />
            <!-- queue size for publishing -->
            <param name="queue_size" type="int" value="1" />
            <!-- image size to which to resize each input image before feeding into the
            network (the final output is rescaled to the original image size) -->
            <param name="img_size" type="int" value="640" />
            <!-- flag whether to also publish image with the visualized detections -->
            <param name="visualize" type="bool" value="true" />
            <!-- 'cuda' or 'cpu' -->
            <param name="device" type="str" value="cpu" />
    </node>
    </group>

    <!-- AprilTag Node -->
    <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="apriltag_ros_continuous_node" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)">
        <!-- Remap topics from those used in code to those on the ROS network -->
        <remap from="image_rect" to="/camera/image_raw" />
        <remap from="/camera/camera_info" to="/camera/raw_camera_info" />

        <param name="publish_tag_detections_image" type="bool" value="true" /><!-- default: false -->
        <param name="queue_size" type="int" value="1" />

        <!-- load parameters (incl. tag family, tags, etc.) -->
        <rosparam command="load" file="$(find apriltag_ros)/config/settings.yaml"/>
        <rosparam command="load" file="$(find apriltag_ros)/config/tags.yaml"/>
    </node>
    
    <node pkg="tdd2" type="sync.py" name="sync" output="screen">
        <remap from="/image" to="/camera/image_raw"/>
        <rosparam file="$(find tdd2)/config/blackfly-5mm.yaml"/>
        <param name="cam0/hfov" type="int" value="80"/>
        <param name="cam0/vfov" type="int" value="40"/>
    </node>
</launch>
